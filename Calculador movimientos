def knight_moves(N):
    # Movimientos válidos desde cada número
    moves = {
        0: [4, 6],
        1: [6, 8],
        2: [7, 9],
        3: [4, 8],
        4: [3, 9, 0],
        5: [],
        6: [1, 7, 0],
        7: [2, 6],
        8: [1, 3],
        9: [2, 4]
    }
    
    # Tabla para almacenar los resultados de la cantidad de movimientos válidos
    dp = [[0 for _ in range(10)] for _ in range(N+1)]
    
    # Inicializar cuando N = 0 (caminos válidos cuando no se requiere más movimiento)
    for i in range(10):
        dp[0][i] = 1
    
    # Rellenar la tabla para N movimientos
    for step in range(1, N+1):
        for num in range(10):
            for move in moves[num]:
                dp[step][num] += dp[step-1][move]
    
    # Sumar los resultados para todos los números iniciales con N movimientos
    total_paths = 0
    for i in range(10):
        total_paths += dp[N][i]
    
    return total_paths

# Ejemplo para 5 movimientos
print(knight_moves(NUMERO DE MOVIMIENTOS A CALCULAR))
